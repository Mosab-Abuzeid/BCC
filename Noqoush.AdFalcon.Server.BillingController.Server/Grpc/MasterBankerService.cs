// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protos/MasterBankerService.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Noqoush.AdFalcon.Banker.Common {

  /// <summary>Holder for reflection information generated from Protos/MasterBankerService.proto</summary>
  public static partial class MasterBankerServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/MasterBankerService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MasterBankerServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBQcm90b3MvTWFzdGVyQmFua2VyU2VydmljZS5wcm90bxoVUHJvdG9zL3dy",
            "YXBwZXJzLnByb3RvIiQKFUdldEZ1bmRCYWxhbmNlUmVxdWVzdBILCgNrZXkY",
            "ASABKAkiRgoWR2V0RnVuZEJhbGFuY2VSZXNwb25zZRIsCgdiYWxhbmNlGAEg",
            "ASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUiDwoNRW1wdHlSZXNw",
            "b25zZSKXAgoWU3BlbmRBY2NvdW50RFRPX01hc3RlchIMCgRnS2V5GAEgASgJ",
            "EisKBmdTcGVudBgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVl",
            "EjQKD2dCYWxhbmNlQ2VpbGluZxgDIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQ2NFZhbHVlEjIKDWdOZXRBbGxvY2F0ZWQYBCABKAsyGy5nb29nbGUucHJv",
            "dG9idWYuSW50NjRWYWx1ZRIfCgdnU3RhdHVzGAUgASgOMg4uQWNjb3VudFN0",
            "YXR1cxI3ChJnQnVkZ2V0RXhwaXJ5RXBvY2gYBiABKAsyGy5nb29nbGUucHJv",
            "dG9idWYuSW50NjRWYWx1ZSL9AgoVU3BlbmRBY2NvdW50RFRPX0xvY2FsEgwK",
            "BGdLZXkYASABKAkSHwoHZ1N0YXR1cxgCIAEoDjIOLkFjY291bnRTdGF0dXMS",
            "OAoTZ0NvbW1pdG1lbnRzUmV0aXJlZBgDIAEoCzIbLmdvb2dsZS5wcm90b2J1",
            "Zi5JbnQ2NFZhbHVlEjUKEGdDb21taXRtZW50c01hZGUYBCABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50NjRWYWx1ZRIrCgZnU3BlbnQYBSABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50NjRWYWx1ZRItCghnQmFsYW5jZRgGIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjEKDGdPdmVyQ2VpbGluZxgHIAEo",
            "CzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjUKEGdGaW5hbENsb3Nl",
            "RXBvY2gYCCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSJUCg5T",
            "eW5jQWxsUmVxdWVzdBITCgtsb2NhbEJhbmtlchgBIAEoCRItCg1sb2NhbEFj",
            "Y291bnRzGAIgAygLMhYuU3BlbmRBY2NvdW50RFRPX0xvY2FsIkIKD1N5bmNB",
            "bGxSZXNwb25zZRIvCg5tYXN0ZXJBY2NvdW50cxgBIAMoCzIXLlNwZW5kQWNj",
            "b3VudERUT19NYXN0ZXIiZgogQ3JlYXRlT3JVcGRhdGVGdW5kQWNjb3VudFJl",
            "cXVlc3QSEgoKYWNjb3VudEtleRgBIAEoCRIuCglleHRyYUZ1bmQYAiABKAsy",
            "Gy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZSK0AgoiQ3JlYXRlT3JVcGRh",
            "dGVCdWRnZXRBY2NvdW50UmVxdWVzdBISCgphY2NvdW50S2V5GAEgASgJEjEK",
            "DG1pblVuaXRQcmljZRgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZh",
            "bHVlEi4KCW5ld0J1ZGdldBgDIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2",
            "NFZhbHVlEjYKEWJ1ZGdldEV4cGlyeUVwb2NoGAQgASgLMhsuZ29vZ2xlLnBy",
            "b3RvYnVmLkludDY0VmFsdWUSMgoNcHJldmlvdXNTcGVudBgFIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEisKDHBhY2luZ1BvbGljeRgGIAEo",
            "DjIVLkJ1ZGdldFBhY2luZ1BvbGljaWVzIlIKEUNoYW5nZUZ1bmRSZXF1ZXN0",
            "Eg8KB2Z1bmRLZXkYASABKAkSLAoHbmV3RnVuZBgCIAEoCzIbLmdvb2dsZS5w",
            "cm90b2J1Zi5JbnQ2NFZhbHVlIikKE0Nsb3NlQWNjb3VudFJlcXVlc3QSEgoK",
            "YWNjb3VudEtleRgBIAEoCSo7ChRCdWRnZXRQYWNpbmdQb2xpY2llcxINCglG",
            "YXN0U3BlbmQQABIUChBFdmVuRGlzdHJpYnV0aW9uEAEqUwoNQWNjb3VudFN0",
            "YXR1cxIKCgZBY3RpdmUQABITCg9DbG9zaW5nX1ByZVN5bmMQARIUChBDbG9z",
            "aW5nX1Bvc3RTeW5jEAISCwoHRXZpY3RlZBADMp4DChNNYXN0ZXJCYW5rZXJT",
            "ZXJ2aWNlEi4KB1N5bmNBbGwSDy5TeW5jQWxsUmVxdWVzdBoQLlN5bmNBbGxS",
            "ZXNwb25zZSIAElAKGUNyZWF0ZU9yVXBkYXRlRnVuZEFjY291bnQSIS5DcmVh",
            "dGVPclVwZGF0ZUZ1bmRBY2NvdW50UmVxdWVzdBoOLkVtcHR5UmVzcG9uc2Ui",
            "ABJUChtDcmVhdGVPclVwZGF0ZUJ1ZGdldEFjY291bnQSIy5DcmVhdGVPclVw",
            "ZGF0ZUJ1ZGdldEFjY291bnRSZXF1ZXN0Gg4uRW1wdHlSZXNwb25zZSIAEjIK",
            "CkNoYW5nZUZ1bmQSEi5DaGFuZ2VGdW5kUmVxdWVzdBoOLkVtcHR5UmVzcG9u",
            "c2UiABI2CgxDbG9zZUFjY291bnQSFC5DbG9zZUFjY291bnRSZXF1ZXN0Gg4u",
            "RW1wdHlSZXNwb25zZSIAEkMKDkdldEZ1bmRCYWxhbmNlEhYuR2V0RnVuZEJh",
            "bGFuY2VSZXF1ZXN0GhcuR2V0RnVuZEJhbGFuY2VSZXNwb25zZSIAQiGqAh5O",
            "b3FvdXNoLkFkRmFsY29uLkJhbmtlci5Db21tb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Noqoush.AdFalcon.Banker.Common.BudgetPacingPolicies), typeof(global::Noqoush.AdFalcon.Banker.Common.AccountStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Noqoush.AdFalcon.Banker.Common.GetFundBalanceRequest), global::Noqoush.AdFalcon.Banker.Common.GetFundBalanceRequest.Parser, new[]{ "Key" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Noqoush.AdFalcon.Banker.Common.GetFundBalanceResponse), global::Noqoush.AdFalcon.Banker.Common.GetFundBalanceResponse.Parser, new[]{ "Balance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Noqoush.AdFalcon.Banker.Common.EmptyResponse), global::Noqoush.AdFalcon.Banker.Common.EmptyResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Master), global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Master.Parser, new[]{ "GKey", "GSpent", "GBalanceCeiling", "GNetAllocated", "GStatus", "GBudgetExpiryEpoch" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Local), global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Local.Parser, new[]{ "GKey", "GStatus", "GCommitmentsRetired", "GCommitmentsMade", "GSpent", "GBalance", "GOverCeiling", "GFinalCloseEpoch" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Noqoush.AdFalcon.Banker.Common.SyncAllRequest), global::Noqoush.AdFalcon.Banker.Common.SyncAllRequest.Parser, new[]{ "LocalBanker", "LocalAccounts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Noqoush.AdFalcon.Banker.Common.SyncAllResponse), global::Noqoush.AdFalcon.Banker.Common.SyncAllResponse.Parser, new[]{ "MasterAccounts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Noqoush.AdFalcon.Banker.Common.CreateOrUpdateFundAccountRequest), global::Noqoush.AdFalcon.Banker.Common.CreateOrUpdateFundAccountRequest.Parser, new[]{ "AccountKey", "ExtraFund" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Noqoush.AdFalcon.Banker.Common.CreateOrUpdateBudgetAccountRequest), global::Noqoush.AdFalcon.Banker.Common.CreateOrUpdateBudgetAccountRequest.Parser, new[]{ "AccountKey", "MinUnitPrice", "NewBudget", "BudgetExpiryEpoch", "PreviousSpent", "PacingPolicy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Noqoush.AdFalcon.Banker.Common.ChangeFundRequest), global::Noqoush.AdFalcon.Banker.Common.ChangeFundRequest.Parser, new[]{ "FundKey", "NewFund" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Noqoush.AdFalcon.Banker.Common.CloseAccountRequest), global::Noqoush.AdFalcon.Banker.Common.CloseAccountRequest.Parser, new[]{ "AccountKey" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum BudgetPacingPolicies {
    [pbr::OriginalName("FastSpend")] FastSpend = 0,
    [pbr::OriginalName("EvenDistribution")] EvenDistribution = 1,
  }

  public enum AccountStatus {
    [pbr::OriginalName("Active")] Active = 0,
    [pbr::OriginalName("Closing_PreSync")] ClosingPreSync = 1,
    [pbr::OriginalName("Closing_PostSync")] ClosingPostSync = 2,
    [pbr::OriginalName("Evicted")] Evicted = 3,
  }

  #endregion

  #region Messages
  public sealed partial class GetFundBalanceRequest : pb::IMessage<GetFundBalanceRequest> {
    private static readonly pb::MessageParser<GetFundBalanceRequest> _parser = new pb::MessageParser<GetFundBalanceRequest>(() => new GetFundBalanceRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFundBalanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Noqoush.AdFalcon.Banker.Common.MasterBankerServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFundBalanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFundBalanceRequest(GetFundBalanceRequest other) : this() {
      key_ = other.key_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFundBalanceRequest Clone() {
      return new GetFundBalanceRequest(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFundBalanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFundBalanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFundBalanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetFundBalanceResponse : pb::IMessage<GetFundBalanceResponse> {
    private static readonly pb::MessageParser<GetFundBalanceResponse> _parser = new pb::MessageParser<GetFundBalanceResponse>(() => new GetFundBalanceResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFundBalanceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Noqoush.AdFalcon.Banker.Common.MasterBankerServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFundBalanceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFundBalanceResponse(GetFundBalanceResponse other) : this() {
      Balance = other.balance_ != null ? other.Balance.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFundBalanceResponse Clone() {
      return new GetFundBalanceResponse(this);
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Int64Value balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFundBalanceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFundBalanceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Balance, other.Balance)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (balance_ != null) hash ^= Balance.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (balance_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Balance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (balance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Balance);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFundBalanceResponse other) {
      if (other == null) {
        return;
      }
      if (other.balance_ != null) {
        if (balance_ == null) {
          balance_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        Balance.MergeFrom(other.Balance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (balance_ == null) {
              balance_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(balance_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmptyResponse : pb::IMessage<EmptyResponse> {
    private static readonly pb::MessageParser<EmptyResponse> _parser = new pb::MessageParser<EmptyResponse>(() => new EmptyResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Noqoush.AdFalcon.Banker.Common.MasterBankerServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse(EmptyResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse Clone() {
      return new EmptyResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class SpendAccountDTO_Master : pb::IMessage<SpendAccountDTO_Master> {
    private static readonly pb::MessageParser<SpendAccountDTO_Master> _parser = new pb::MessageParser<SpendAccountDTO_Master>(() => new SpendAccountDTO_Master());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpendAccountDTO_Master> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Noqoush.AdFalcon.Banker.Common.MasterBankerServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendAccountDTO_Master() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendAccountDTO_Master(SpendAccountDTO_Master other) : this() {
      gKey_ = other.gKey_;
      GSpent = other.gSpent_ != null ? other.GSpent.Clone() : null;
      GBalanceCeiling = other.gBalanceCeiling_ != null ? other.GBalanceCeiling.Clone() : null;
      GNetAllocated = other.gNetAllocated_ != null ? other.GNetAllocated.Clone() : null;
      gStatus_ = other.gStatus_;
      GBudgetExpiryEpoch = other.gBudgetExpiryEpoch_ != null ? other.GBudgetExpiryEpoch.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendAccountDTO_Master Clone() {
      return new SpendAccountDTO_Master(this);
    }

    /// <summary>Field number for the "gKey" field.</summary>
    public const int GKeyFieldNumber = 1;
    private string gKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GKey {
      get { return gKey_; }
      set {
        gKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gSpent" field.</summary>
    public const int GSpentFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Int64Value gSpent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value GSpent {
      get { return gSpent_; }
      set {
        gSpent_ = value;
      }
    }

    /// <summary>Field number for the "gBalanceCeiling" field.</summary>
    public const int GBalanceCeilingFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Int64Value gBalanceCeiling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value GBalanceCeiling {
      get { return gBalanceCeiling_; }
      set {
        gBalanceCeiling_ = value;
      }
    }

    /// <summary>Field number for the "gNetAllocated" field.</summary>
    public const int GNetAllocatedFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Int64Value gNetAllocated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value GNetAllocated {
      get { return gNetAllocated_; }
      set {
        gNetAllocated_ = value;
      }
    }

    /// <summary>Field number for the "gStatus" field.</summary>
    public const int GStatusFieldNumber = 5;
    private global::Noqoush.AdFalcon.Banker.Common.AccountStatus gStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Noqoush.AdFalcon.Banker.Common.AccountStatus GStatus {
      get { return gStatus_; }
      set {
        gStatus_ = value;
      }
    }

    /// <summary>Field number for the "gBudgetExpiryEpoch" field.</summary>
    public const int GBudgetExpiryEpochFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Int64Value gBudgetExpiryEpoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value GBudgetExpiryEpoch {
      get { return gBudgetExpiryEpoch_; }
      set {
        gBudgetExpiryEpoch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpendAccountDTO_Master);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpendAccountDTO_Master other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GKey != other.GKey) return false;
      if (!object.Equals(GSpent, other.GSpent)) return false;
      if (!object.Equals(GBalanceCeiling, other.GBalanceCeiling)) return false;
      if (!object.Equals(GNetAllocated, other.GNetAllocated)) return false;
      if (GStatus != other.GStatus) return false;
      if (!object.Equals(GBudgetExpiryEpoch, other.GBudgetExpiryEpoch)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GKey.Length != 0) hash ^= GKey.GetHashCode();
      if (gSpent_ != null) hash ^= GSpent.GetHashCode();
      if (gBalanceCeiling_ != null) hash ^= GBalanceCeiling.GetHashCode();
      if (gNetAllocated_ != null) hash ^= GNetAllocated.GetHashCode();
      if (GStatus != 0) hash ^= GStatus.GetHashCode();
      if (gBudgetExpiryEpoch_ != null) hash ^= GBudgetExpiryEpoch.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GKey);
      }
      if (gSpent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GSpent);
      }
      if (gBalanceCeiling_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GBalanceCeiling);
      }
      if (gNetAllocated_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GNetAllocated);
      }
      if (GStatus != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) GStatus);
      }
      if (gBudgetExpiryEpoch_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(GBudgetExpiryEpoch);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GKey);
      }
      if (gSpent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GSpent);
      }
      if (gBalanceCeiling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GBalanceCeiling);
      }
      if (gNetAllocated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GNetAllocated);
      }
      if (GStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GStatus);
      }
      if (gBudgetExpiryEpoch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GBudgetExpiryEpoch);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpendAccountDTO_Master other) {
      if (other == null) {
        return;
      }
      if (other.GKey.Length != 0) {
        GKey = other.GKey;
      }
      if (other.gSpent_ != null) {
        if (gSpent_ == null) {
          gSpent_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        GSpent.MergeFrom(other.GSpent);
      }
      if (other.gBalanceCeiling_ != null) {
        if (gBalanceCeiling_ == null) {
          gBalanceCeiling_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        GBalanceCeiling.MergeFrom(other.GBalanceCeiling);
      }
      if (other.gNetAllocated_ != null) {
        if (gNetAllocated_ == null) {
          gNetAllocated_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        GNetAllocated.MergeFrom(other.GNetAllocated);
      }
      if (other.GStatus != 0) {
        GStatus = other.GStatus;
      }
      if (other.gBudgetExpiryEpoch_ != null) {
        if (gBudgetExpiryEpoch_ == null) {
          gBudgetExpiryEpoch_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        GBudgetExpiryEpoch.MergeFrom(other.GBudgetExpiryEpoch);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GKey = input.ReadString();
            break;
          }
          case 18: {
            if (gSpent_ == null) {
              gSpent_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(gSpent_);
            break;
          }
          case 26: {
            if (gBalanceCeiling_ == null) {
              gBalanceCeiling_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(gBalanceCeiling_);
            break;
          }
          case 34: {
            if (gNetAllocated_ == null) {
              gNetAllocated_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(gNetAllocated_);
            break;
          }
          case 40: {
            gStatus_ = (global::Noqoush.AdFalcon.Banker.Common.AccountStatus) input.ReadEnum();
            break;
          }
          case 50: {
            if (gBudgetExpiryEpoch_ == null) {
              gBudgetExpiryEpoch_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(gBudgetExpiryEpoch_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpendAccountDTO_Local : pb::IMessage<SpendAccountDTO_Local> {
    private static readonly pb::MessageParser<SpendAccountDTO_Local> _parser = new pb::MessageParser<SpendAccountDTO_Local>(() => new SpendAccountDTO_Local());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpendAccountDTO_Local> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Noqoush.AdFalcon.Banker.Common.MasterBankerServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendAccountDTO_Local() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendAccountDTO_Local(SpendAccountDTO_Local other) : this() {
      gKey_ = other.gKey_;
      gStatus_ = other.gStatus_;
      GCommitmentsRetired = other.gCommitmentsRetired_ != null ? other.GCommitmentsRetired.Clone() : null;
      GCommitmentsMade = other.gCommitmentsMade_ != null ? other.GCommitmentsMade.Clone() : null;
      GSpent = other.gSpent_ != null ? other.GSpent.Clone() : null;
      GBalance = other.gBalance_ != null ? other.GBalance.Clone() : null;
      GOverCeiling = other.gOverCeiling_ != null ? other.GOverCeiling.Clone() : null;
      GFinalCloseEpoch = other.gFinalCloseEpoch_ != null ? other.GFinalCloseEpoch.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendAccountDTO_Local Clone() {
      return new SpendAccountDTO_Local(this);
    }

    /// <summary>Field number for the "gKey" field.</summary>
    public const int GKeyFieldNumber = 1;
    private string gKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GKey {
      get { return gKey_; }
      set {
        gKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gStatus" field.</summary>
    public const int GStatusFieldNumber = 2;
    private global::Noqoush.AdFalcon.Banker.Common.AccountStatus gStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Noqoush.AdFalcon.Banker.Common.AccountStatus GStatus {
      get { return gStatus_; }
      set {
        gStatus_ = value;
      }
    }

    /// <summary>Field number for the "gCommitmentsRetired" field.</summary>
    public const int GCommitmentsRetiredFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Int64Value gCommitmentsRetired_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value GCommitmentsRetired {
      get { return gCommitmentsRetired_; }
      set {
        gCommitmentsRetired_ = value;
      }
    }

    /// <summary>Field number for the "gCommitmentsMade" field.</summary>
    public const int GCommitmentsMadeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Int64Value gCommitmentsMade_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value GCommitmentsMade {
      get { return gCommitmentsMade_; }
      set {
        gCommitmentsMade_ = value;
      }
    }

    /// <summary>Field number for the "gSpent" field.</summary>
    public const int GSpentFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Int64Value gSpent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value GSpent {
      get { return gSpent_; }
      set {
        gSpent_ = value;
      }
    }

    /// <summary>Field number for the "gBalance" field.</summary>
    public const int GBalanceFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Int64Value gBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value GBalance {
      get { return gBalance_; }
      set {
        gBalance_ = value;
      }
    }

    /// <summary>Field number for the "gOverCeiling" field.</summary>
    public const int GOverCeilingFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Int64Value gOverCeiling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value GOverCeiling {
      get { return gOverCeiling_; }
      set {
        gOverCeiling_ = value;
      }
    }

    /// <summary>Field number for the "gFinalCloseEpoch" field.</summary>
    public const int GFinalCloseEpochFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Int64Value gFinalCloseEpoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value GFinalCloseEpoch {
      get { return gFinalCloseEpoch_; }
      set {
        gFinalCloseEpoch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpendAccountDTO_Local);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpendAccountDTO_Local other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GKey != other.GKey) return false;
      if (GStatus != other.GStatus) return false;
      if (!object.Equals(GCommitmentsRetired, other.GCommitmentsRetired)) return false;
      if (!object.Equals(GCommitmentsMade, other.GCommitmentsMade)) return false;
      if (!object.Equals(GSpent, other.GSpent)) return false;
      if (!object.Equals(GBalance, other.GBalance)) return false;
      if (!object.Equals(GOverCeiling, other.GOverCeiling)) return false;
      if (!object.Equals(GFinalCloseEpoch, other.GFinalCloseEpoch)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GKey.Length != 0) hash ^= GKey.GetHashCode();
      if (GStatus != 0) hash ^= GStatus.GetHashCode();
      if (gCommitmentsRetired_ != null) hash ^= GCommitmentsRetired.GetHashCode();
      if (gCommitmentsMade_ != null) hash ^= GCommitmentsMade.GetHashCode();
      if (gSpent_ != null) hash ^= GSpent.GetHashCode();
      if (gBalance_ != null) hash ^= GBalance.GetHashCode();
      if (gOverCeiling_ != null) hash ^= GOverCeiling.GetHashCode();
      if (gFinalCloseEpoch_ != null) hash ^= GFinalCloseEpoch.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GKey);
      }
      if (GStatus != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) GStatus);
      }
      if (gCommitmentsRetired_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GCommitmentsRetired);
      }
      if (gCommitmentsMade_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GCommitmentsMade);
      }
      if (gSpent_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(GSpent);
      }
      if (gBalance_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(GBalance);
      }
      if (gOverCeiling_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(GOverCeiling);
      }
      if (gFinalCloseEpoch_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(GFinalCloseEpoch);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GKey);
      }
      if (GStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GStatus);
      }
      if (gCommitmentsRetired_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GCommitmentsRetired);
      }
      if (gCommitmentsMade_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GCommitmentsMade);
      }
      if (gSpent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GSpent);
      }
      if (gBalance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GBalance);
      }
      if (gOverCeiling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GOverCeiling);
      }
      if (gFinalCloseEpoch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GFinalCloseEpoch);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpendAccountDTO_Local other) {
      if (other == null) {
        return;
      }
      if (other.GKey.Length != 0) {
        GKey = other.GKey;
      }
      if (other.GStatus != 0) {
        GStatus = other.GStatus;
      }
      if (other.gCommitmentsRetired_ != null) {
        if (gCommitmentsRetired_ == null) {
          gCommitmentsRetired_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        GCommitmentsRetired.MergeFrom(other.GCommitmentsRetired);
      }
      if (other.gCommitmentsMade_ != null) {
        if (gCommitmentsMade_ == null) {
          gCommitmentsMade_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        GCommitmentsMade.MergeFrom(other.GCommitmentsMade);
      }
      if (other.gSpent_ != null) {
        if (gSpent_ == null) {
          gSpent_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        GSpent.MergeFrom(other.GSpent);
      }
      if (other.gBalance_ != null) {
        if (gBalance_ == null) {
          gBalance_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        GBalance.MergeFrom(other.GBalance);
      }
      if (other.gOverCeiling_ != null) {
        if (gOverCeiling_ == null) {
          gOverCeiling_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        GOverCeiling.MergeFrom(other.GOverCeiling);
      }
      if (other.gFinalCloseEpoch_ != null) {
        if (gFinalCloseEpoch_ == null) {
          gFinalCloseEpoch_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        GFinalCloseEpoch.MergeFrom(other.GFinalCloseEpoch);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            GKey = input.ReadString();
            break;
          }
          case 16: {
            gStatus_ = (global::Noqoush.AdFalcon.Banker.Common.AccountStatus) input.ReadEnum();
            break;
          }
          case 26: {
            if (gCommitmentsRetired_ == null) {
              gCommitmentsRetired_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(gCommitmentsRetired_);
            break;
          }
          case 34: {
            if (gCommitmentsMade_ == null) {
              gCommitmentsMade_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(gCommitmentsMade_);
            break;
          }
          case 42: {
            if (gSpent_ == null) {
              gSpent_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(gSpent_);
            break;
          }
          case 50: {
            if (gBalance_ == null) {
              gBalance_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(gBalance_);
            break;
          }
          case 58: {
            if (gOverCeiling_ == null) {
              gOverCeiling_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(gOverCeiling_);
            break;
          }
          case 66: {
            if (gFinalCloseEpoch_ == null) {
              gFinalCloseEpoch_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(gFinalCloseEpoch_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SyncAllRequest : pb::IMessage<SyncAllRequest> {
    private static readonly pb::MessageParser<SyncAllRequest> _parser = new pb::MessageParser<SyncAllRequest>(() => new SyncAllRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SyncAllRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Noqoush.AdFalcon.Banker.Common.MasterBankerServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncAllRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncAllRequest(SyncAllRequest other) : this() {
      localBanker_ = other.localBanker_;
      localAccounts_ = other.localAccounts_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncAllRequest Clone() {
      return new SyncAllRequest(this);
    }

    /// <summary>Field number for the "localBanker" field.</summary>
    public const int LocalBankerFieldNumber = 1;
    private string localBanker_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocalBanker {
      get { return localBanker_; }
      set {
        localBanker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "localAccounts" field.</summary>
    public const int LocalAccountsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Local> _repeated_localAccounts_codec
        = pb::FieldCodec.ForMessage(18, global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Local.Parser);
    private readonly pbc::RepeatedField<global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Local> localAccounts_ = new pbc::RepeatedField<global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Local>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Local> LocalAccounts {
      get { return localAccounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SyncAllRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SyncAllRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LocalBanker != other.LocalBanker) return false;
      if(!localAccounts_.Equals(other.localAccounts_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LocalBanker.Length != 0) hash ^= LocalBanker.GetHashCode();
      hash ^= localAccounts_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LocalBanker.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LocalBanker);
      }
      localAccounts_.WriteTo(output, _repeated_localAccounts_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LocalBanker.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalBanker);
      }
      size += localAccounts_.CalculateSize(_repeated_localAccounts_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SyncAllRequest other) {
      if (other == null) {
        return;
      }
      if (other.LocalBanker.Length != 0) {
        LocalBanker = other.LocalBanker;
      }
      localAccounts_.Add(other.localAccounts_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            LocalBanker = input.ReadString();
            break;
          }
          case 18: {
            localAccounts_.AddEntriesFrom(input, _repeated_localAccounts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SyncAllResponse : pb::IMessage<SyncAllResponse> {
    private static readonly pb::MessageParser<SyncAllResponse> _parser = new pb::MessageParser<SyncAllResponse>(() => new SyncAllResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SyncAllResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Noqoush.AdFalcon.Banker.Common.MasterBankerServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncAllResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncAllResponse(SyncAllResponse other) : this() {
      masterAccounts_ = other.masterAccounts_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncAllResponse Clone() {
      return new SyncAllResponse(this);
    }

    /// <summary>Field number for the "masterAccounts" field.</summary>
    public const int MasterAccountsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Master> _repeated_masterAccounts_codec
        = pb::FieldCodec.ForMessage(10, global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Master.Parser);
    private readonly pbc::RepeatedField<global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Master> masterAccounts_ = new pbc::RepeatedField<global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Master>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Noqoush.AdFalcon.Banker.Common.SpendAccountDTO_Master> MasterAccounts {
      get { return masterAccounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SyncAllResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SyncAllResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!masterAccounts_.Equals(other.masterAccounts_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= masterAccounts_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      masterAccounts_.WriteTo(output, _repeated_masterAccounts_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += masterAccounts_.CalculateSize(_repeated_masterAccounts_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SyncAllResponse other) {
      if (other == null) {
        return;
      }
      masterAccounts_.Add(other.masterAccounts_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            masterAccounts_.AddEntriesFrom(input, _repeated_masterAccounts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateOrUpdateFundAccountRequest : pb::IMessage<CreateOrUpdateFundAccountRequest> {
    private static readonly pb::MessageParser<CreateOrUpdateFundAccountRequest> _parser = new pb::MessageParser<CreateOrUpdateFundAccountRequest>(() => new CreateOrUpdateFundAccountRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateOrUpdateFundAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Noqoush.AdFalcon.Banker.Common.MasterBankerServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrUpdateFundAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrUpdateFundAccountRequest(CreateOrUpdateFundAccountRequest other) : this() {
      accountKey_ = other.accountKey_;
      ExtraFund = other.extraFund_ != null ? other.ExtraFund.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrUpdateFundAccountRequest Clone() {
      return new CreateOrUpdateFundAccountRequest(this);
    }

    /// <summary>Field number for the "accountKey" field.</summary>
    public const int AccountKeyFieldNumber = 1;
    private string accountKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountKey {
      get { return accountKey_; }
      set {
        accountKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extraFund" field.</summary>
    public const int ExtraFundFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Int64Value extraFund_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value ExtraFund {
      get { return extraFund_; }
      set {
        extraFund_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateOrUpdateFundAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateOrUpdateFundAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountKey != other.AccountKey) return false;
      if (!object.Equals(ExtraFund, other.ExtraFund)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountKey.Length != 0) hash ^= AccountKey.GetHashCode();
      if (extraFund_ != null) hash ^= ExtraFund.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountKey);
      }
      if (extraFund_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExtraFund);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountKey);
      }
      if (extraFund_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExtraFund);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateOrUpdateFundAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountKey.Length != 0) {
        AccountKey = other.AccountKey;
      }
      if (other.extraFund_ != null) {
        if (extraFund_ == null) {
          extraFund_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        ExtraFund.MergeFrom(other.ExtraFund);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AccountKey = input.ReadString();
            break;
          }
          case 18: {
            if (extraFund_ == null) {
              extraFund_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(extraFund_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateOrUpdateBudgetAccountRequest : pb::IMessage<CreateOrUpdateBudgetAccountRequest> {
    private static readonly pb::MessageParser<CreateOrUpdateBudgetAccountRequest> _parser = new pb::MessageParser<CreateOrUpdateBudgetAccountRequest>(() => new CreateOrUpdateBudgetAccountRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateOrUpdateBudgetAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Noqoush.AdFalcon.Banker.Common.MasterBankerServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrUpdateBudgetAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrUpdateBudgetAccountRequest(CreateOrUpdateBudgetAccountRequest other) : this() {
      accountKey_ = other.accountKey_;
      MinUnitPrice = other.minUnitPrice_ != null ? other.MinUnitPrice.Clone() : null;
      NewBudget = other.newBudget_ != null ? other.NewBudget.Clone() : null;
      BudgetExpiryEpoch = other.budgetExpiryEpoch_ != null ? other.BudgetExpiryEpoch.Clone() : null;
      PreviousSpent = other.previousSpent_ != null ? other.PreviousSpent.Clone() : null;
      pacingPolicy_ = other.pacingPolicy_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateOrUpdateBudgetAccountRequest Clone() {
      return new CreateOrUpdateBudgetAccountRequest(this);
    }

    /// <summary>Field number for the "accountKey" field.</summary>
    public const int AccountKeyFieldNumber = 1;
    private string accountKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountKey {
      get { return accountKey_; }
      set {
        accountKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "minUnitPrice" field.</summary>
    public const int MinUnitPriceFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Int64Value minUnitPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value MinUnitPrice {
      get { return minUnitPrice_; }
      set {
        minUnitPrice_ = value;
      }
    }

    /// <summary>Field number for the "newBudget" field.</summary>
    public const int NewBudgetFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Int64Value newBudget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value NewBudget {
      get { return newBudget_; }
      set {
        newBudget_ = value;
      }
    }

    /// <summary>Field number for the "budgetExpiryEpoch" field.</summary>
    public const int BudgetExpiryEpochFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Int64Value budgetExpiryEpoch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value BudgetExpiryEpoch {
      get { return budgetExpiryEpoch_; }
      set {
        budgetExpiryEpoch_ = value;
      }
    }

    /// <summary>Field number for the "previousSpent" field.</summary>
    public const int PreviousSpentFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Int64Value previousSpent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value PreviousSpent {
      get { return previousSpent_; }
      set {
        previousSpent_ = value;
      }
    }

    /// <summary>Field number for the "pacingPolicy" field.</summary>
    public const int PacingPolicyFieldNumber = 6;
    private global::Noqoush.AdFalcon.Banker.Common.BudgetPacingPolicies pacingPolicy_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Noqoush.AdFalcon.Banker.Common.BudgetPacingPolicies PacingPolicy {
      get { return pacingPolicy_; }
      set {
        pacingPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateOrUpdateBudgetAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateOrUpdateBudgetAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountKey != other.AccountKey) return false;
      if (!object.Equals(MinUnitPrice, other.MinUnitPrice)) return false;
      if (!object.Equals(NewBudget, other.NewBudget)) return false;
      if (!object.Equals(BudgetExpiryEpoch, other.BudgetExpiryEpoch)) return false;
      if (!object.Equals(PreviousSpent, other.PreviousSpent)) return false;
      if (PacingPolicy != other.PacingPolicy) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountKey.Length != 0) hash ^= AccountKey.GetHashCode();
      if (minUnitPrice_ != null) hash ^= MinUnitPrice.GetHashCode();
      if (newBudget_ != null) hash ^= NewBudget.GetHashCode();
      if (budgetExpiryEpoch_ != null) hash ^= BudgetExpiryEpoch.GetHashCode();
      if (previousSpent_ != null) hash ^= PreviousSpent.GetHashCode();
      if (PacingPolicy != 0) hash ^= PacingPolicy.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountKey);
      }
      if (minUnitPrice_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MinUnitPrice);
      }
      if (newBudget_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NewBudget);
      }
      if (budgetExpiryEpoch_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BudgetExpiryEpoch);
      }
      if (previousSpent_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PreviousSpent);
      }
      if (PacingPolicy != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) PacingPolicy);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountKey);
      }
      if (minUnitPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinUnitPrice);
      }
      if (newBudget_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewBudget);
      }
      if (budgetExpiryEpoch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BudgetExpiryEpoch);
      }
      if (previousSpent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviousSpent);
      }
      if (PacingPolicy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PacingPolicy);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateOrUpdateBudgetAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountKey.Length != 0) {
        AccountKey = other.AccountKey;
      }
      if (other.minUnitPrice_ != null) {
        if (minUnitPrice_ == null) {
          minUnitPrice_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        MinUnitPrice.MergeFrom(other.MinUnitPrice);
      }
      if (other.newBudget_ != null) {
        if (newBudget_ == null) {
          newBudget_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        NewBudget.MergeFrom(other.NewBudget);
      }
      if (other.budgetExpiryEpoch_ != null) {
        if (budgetExpiryEpoch_ == null) {
          budgetExpiryEpoch_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        BudgetExpiryEpoch.MergeFrom(other.BudgetExpiryEpoch);
      }
      if (other.previousSpent_ != null) {
        if (previousSpent_ == null) {
          previousSpent_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        PreviousSpent.MergeFrom(other.PreviousSpent);
      }
      if (other.PacingPolicy != 0) {
        PacingPolicy = other.PacingPolicy;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AccountKey = input.ReadString();
            break;
          }
          case 18: {
            if (minUnitPrice_ == null) {
              minUnitPrice_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(minUnitPrice_);
            break;
          }
          case 26: {
            if (newBudget_ == null) {
              newBudget_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(newBudget_);
            break;
          }
          case 34: {
            if (budgetExpiryEpoch_ == null) {
              budgetExpiryEpoch_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(budgetExpiryEpoch_);
            break;
          }
          case 42: {
            if (previousSpent_ == null) {
              previousSpent_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(previousSpent_);
            break;
          }
          case 48: {
            pacingPolicy_ = (global::Noqoush.AdFalcon.Banker.Common.BudgetPacingPolicies) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeFundRequest : pb::IMessage<ChangeFundRequest> {
    private static readonly pb::MessageParser<ChangeFundRequest> _parser = new pb::MessageParser<ChangeFundRequest>(() => new ChangeFundRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeFundRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Noqoush.AdFalcon.Banker.Common.MasterBankerServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeFundRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeFundRequest(ChangeFundRequest other) : this() {
      fundKey_ = other.fundKey_;
      NewFund = other.newFund_ != null ? other.NewFund.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeFundRequest Clone() {
      return new ChangeFundRequest(this);
    }

    /// <summary>Field number for the "fundKey" field.</summary>
    public const int FundKeyFieldNumber = 1;
    private string fundKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FundKey {
      get { return fundKey_; }
      set {
        fundKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "newFund" field.</summary>
    public const int NewFundFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Int64Value newFund_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Int64Value NewFund {
      get { return newFund_; }
      set {
        newFund_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeFundRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeFundRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FundKey != other.FundKey) return false;
      if (!object.Equals(NewFund, other.NewFund)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FundKey.Length != 0) hash ^= FundKey.GetHashCode();
      if (newFund_ != null) hash ^= NewFund.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FundKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FundKey);
      }
      if (newFund_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewFund);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FundKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FundKey);
      }
      if (newFund_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewFund);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeFundRequest other) {
      if (other == null) {
        return;
      }
      if (other.FundKey.Length != 0) {
        FundKey = other.FundKey;
      }
      if (other.newFund_ != null) {
        if (newFund_ == null) {
          newFund_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
        }
        NewFund.MergeFrom(other.NewFund);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            FundKey = input.ReadString();
            break;
          }
          case 18: {
            if (newFund_ == null) {
              newFund_ = new global::Google.Protobuf.WellKnownTypes.Int64Value();
            }
            input.ReadMessage(newFund_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CloseAccountRequest : pb::IMessage<CloseAccountRequest> {
    private static readonly pb::MessageParser<CloseAccountRequest> _parser = new pb::MessageParser<CloseAccountRequest>(() => new CloseAccountRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloseAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Noqoush.AdFalcon.Banker.Common.MasterBankerServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseAccountRequest(CloseAccountRequest other) : this() {
      accountKey_ = other.accountKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloseAccountRequest Clone() {
      return new CloseAccountRequest(this);
    }

    /// <summary>Field number for the "accountKey" field.</summary>
    public const int AccountKeyFieldNumber = 1;
    private string accountKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountKey {
      get { return accountKey_; }
      set {
        accountKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloseAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloseAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountKey != other.AccountKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountKey.Length != 0) hash ^= AccountKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloseAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.AccountKey.Length != 0) {
        AccountKey = other.AccountKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            AccountKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
